
#Область ПрограммныйИнтерфейс

Процедура ПроверитьПодключениеКлиентСервер(КлиентКомпоненты, Структура)Экспорт
	
	Попытка
		КлиентКомпоненты.Connect(
		Структура.Адрес,
		Структура.Порт,
		Структура.Логин,
		Структура.Пароль,
		Структура.ВиртуальныйХост);
	Исключение
		СистемнаяОшибка = ОписаниеОшибки();
		ТекстСообщения = "Ошибка подключения!%СистемнаяОшибка%";
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СистемнаяОшибка%", СистемнаяОшибка);
		ВызватьИсключение ТекстСообщения;
	КонецПопытки;
	
	Сообщить(НСтр("ru = 'Подключение успешно выполнено!'"));
	
КонецПроцедуры     

Процедура ПодключитьКомпонентуСервер(КомпонентаПодключена = Неопределено) Экспорт
	
	АдресВоВременномХранилище = rabbitServer.ПолучитьАдресМакетаКомпановкиНаСервере(Новый УникальныйИдентификатор);
	КомпонентаПодключена = ПодключитьВнешнююКомпоненту(
	АдресВоВременномХранилище,
	"BITERP",
	ТипВнешнейКомпоненты.Native);
	Сообщить(НСтр("ru = 'Компонента подключена!'"));
КонецПроцедуры  

Функция ПолучитьКомпонентуСервер() Экспорт 
	
	КлиентКомпоненты = Неопределено;
	Если Не ИнициализироватьКомпонентуКлиентСервер(КлиентКомпоненты) Тогда
		
		ПодключитьКомпонентуСервер();
		ИнициализироватьКомпонентуКлиентСервер(КлиентКомпоненты);
		
	КонецЕсли;
	
	Возврат КлиентКомпоненты;  
	
КонецФункции    

Функция ИнициализироватьКомпонентуКлиентСервер(Компонента)Экспорт
	
	Попытка
		Компонента  = Новый("AddIn.BITERP.PinkRabbitMQ");
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции              

Процедура СозданиеТочкиИОчередиСервер(Структура)Экспорт    
	
	КлиентКомпоненты = ПолучитьКомпонентуСервер();
	СозданиеТочкиИОчередиКлиентСервер(КлиентКомпоненты, Структура);
	
КонецПроцедуры     

Процедура СозданиеТочкиИОчередиКлиентСервер(КлиентКомпоненты, Структура)Экспорт
	
	Попытка
		КлиентКомпоненты.Connect(
		Структура.Адрес,
		Структура.Порт,
		Структура.Логин,
		Структура.Пароль,
		Структура.ВиртуальныйХост);
		
		ТочкаОбмена = Структура.ТочкаОбмена;
		ИмяОчереди  = Структура.ИмяОчереди;
		
		КлиентКомпоненты.DeclareExchange(ТочкаОбмена, "topic", Ложь, Истина, Ложь);
		КлиентКомпоненты.DeclareQueue(ИмяОчереди, Ложь, Ложь, Ложь, Ложь);
		КлиентКомпоненты.BindQueue(ИмяОчереди, ТочкаОбмена, ИмяОчереди);
	Исключение
		СистемнаяОшибка = ОписаниеОшибки();
		ТекстСообщения = "Ошибка создания точек и очередей!%СистемнаяОшибка%";
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СистемнаяОшибка%", СистемнаяОшибка);
		ВызватьИсключение ТекстСообщения;
	КонецПопытки;
	
	Сообщить("Точки и очереди успешно созданы!");   
	
КонецПроцедуры   

Процедура ОтправитьСообщениеКлиентСервер(КлиентКомпоненты, Форма)Экспорт

	Попытка
		КлиентКомпоненты.Connect(
		Форма.Адрес,
		Форма.Порт,
		Форма.Логин,
		Форма.Пароль,
		Форма.ВиртуальныйХост);
		
		ТочкаОбмена    = Форма.ТочкаОбмена;
		ИмяОчереди     = Форма.ИмяОчереди;
		ТекстСообщения = Форма.ТекстСообщения;
		КлючМаршрутизации = Форма.КлючМаршрутизации;
		
		КлиентКомпоненты.BasicPublish(
		ТочкаОбмена,
		КлючМаршрутизации,
		ТекстСообщения,
		1,
		Ложь);
	Исключение
		СистемнаяОшибка = ОписаниеОшибки();
		ТекстСообщения = "Ошибка отправки сообщения!%СистемнаяОшибка%";
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СистемнаяОшибка%", СистемнаяОшибка);
		ВызватьИсключение ТекстСообщения;
	КонецПопытки;
	  	
КонецПроцедуры

Функция  ПрочитатьСообщениеКлиентСервер(КлиентКомпоненты, Форма)Экспорт

	Попытка
		КлиентКомпоненты.Connect(
		Форма.Адрес,
		Форма.Порт,
		Форма.Логин,
		Форма.Пароль,
		Форма.ВиртуальныйХост);
		
		ИмяОчереди = Форма.ИмяОчереди;
		
		Попытка
			//КлиентКомпоненты.DeclareQueue(ИмяОчереди, Ложь, Ложь, Ложь, Ложь);
			
			Потребитель = КлиентКомпоненты.BasicConsume(ИмяОчереди, "", Истина, Ложь, 0);
			
			ОтветноеСообщение = "";
			Если КлиентКомпоненты.BasicConsumeMessage("", ОтветноеСообщение, 5) Тогда
				КлиентКомпоненты.BasicAck();
				ОтветноеСообщение = ОтветноеСообщение;
				ТекстСообщения = НСтр("ru='Сообщение успешно прочитано!'");
			Иначе
				ОтветноеСообщение = ОтветноеСообщение;
				ТекстСообщения = НСтр("ru='Очередь пустая!'");
			КонецЕсли;
			Сообщить(ТекстСообщения);
			
			КлиентКомпоненты.BasicCancel(""); 
			
		Исключение
			ВызватьИсключение КлиентКомпоненты.GetLastError();
		КонецПопытки;
	Исключение
		СистемнаяОшибка = ОписаниеОшибки();
		ТекстСообщения = "Ошибка чтения сообщения!%СистемнаяОшибка%";
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СистемнаяОшибка%", СистемнаяОшибка);
		ВызватьИсключение ТекстСообщения;
	КонецПопытки;   
	Возврат ОтветноеСообщение;   

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьПодключениеСервер(
	Адрес,
	Порт,
	Логин,
	Пароль,
	ВиртуальныйХост)Экспорт
	
	Структура = Новый Структура;
	Структура.Вставить("Адрес", Адрес);
	Структура.Вставить("Порт", Порт);
	Структура.Вставить("Логин", Логин);
	Структура.Вставить("Пароль", Пароль);
	Структура.Вставить("ВиртуальныйХост", ВиртуальныйХост);
	
	КлиентКомпоненты = ПолучитьКомпонентуСервер();
	ПроверитьПодключениеКлиентСервер(КлиентКомпоненты, Структура);
	
КонецПроцедуры   

#КонецОбласти   













