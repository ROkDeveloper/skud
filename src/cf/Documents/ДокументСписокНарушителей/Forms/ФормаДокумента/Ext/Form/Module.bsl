#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры 

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы      

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Объект.ТабличнаяЧасть.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЖурналСобытийСрезПоследних.ОбъектДоступа КАК Объект,
	               |	ЖурналСобытийСрезПоследних.Направление КАК Направление,
	               |	ЖурналСобытийСрезПоследних.ВремяСобытия КАК ВремяСобытия
	               |ПОМЕСТИТЬ Сотрудники
	               |ИЗ
	               |	РегистрСведений.ЖурналСобытий.СрезПоследних(
	               |			,
	               |			ОбъектДоступа.Отдел = &Отдел
	               |				И Направление = &НаправлениеВход
	               |				И ВремяСобытия > &ВремяВход
	               |				И ДатаСобытия = &ДатаДокумента) КАК ЖурналСобытийСрезПоследних
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЖурналСобытийСрезПоследних.ОбъектДоступа,
	               |	ЖурналСобытийСрезПоследних.Направление,
	               |	ЖурналСобытийСрезПоследних.ВремяСобытия
	               |ИЗ
	               |	РегистрСведений.ЖурналСобытий.СрезПоследних(
	               |			,
	               |			ОбъектДоступа.Отдел = &Отдел
	               |				И Направление = &НаправлениеВыход
	               |				И ВремяСобытия < &ВремяВыход
	               |				И ДатаСобытия = &ДатаДокумента) КАК ЖурналСобытийСрезПоследних
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Сотрудники.Объект КАК Объект,
	               |	Сотрудники.Направление КАК Направление,
	               |	Сотрудники.ВремяСобытия КАК ВремяСобытия
	               |ИЗ
	               |	Сотрудники КАК Сотрудники
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Сотрудники.Объект,
	               |	Сотрудники.Направление,
	               |	Сотрудники.ВремяСобытия";
	
	Запрос.УстановитьПараметр("ВремяВход",  Дата("01.01.0001 8:00:00"));
	Запрос.УстановитьПараметр("ВремяВыход", Дата("01.01.0001 17:00:00"));
	Запрос.УстановитьПараметр("ДатаДокумента", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("НаправлениеВход", Перечисления.НаправленияПрохода.Вход);
	Запрос.УстановитьПараметр("НаправлениеВыход", Перечисления.НаправленияПрохода.Выход);
	Запрос.УстановитьПараметр("Отдел",            Объект.Отдел);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();                                                       
	
	Пока Выборка.Следующий() Цикл
		Строка = Объект.ТабличнаяЧасть.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, Выборка);
	КонецЦикла;
	
КонецПроцедуры


// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды


#КонецОбласти






